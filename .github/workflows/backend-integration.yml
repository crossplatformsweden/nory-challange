name: Backend-Frontend Integration

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'apps/backend/**'
      - 'apps/web/**'
      - 'packages/zod-clients/**'
      - 'packages/api-client/**'
      - '.github/workflows/backend-integration.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'apps/backend/**'
      - 'apps/web/**'
      - 'packages/zod-clients/**'
      - 'packages/api-client/**'
      - '.github/workflows/backend-integration.yml'
  workflow_dispatch: # Manual trigger

jobs:
  integration-test:
    name: Test Backend-Frontend Integration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install
      
      # Build packages in correct order
      - name: Build zod-clients
        run: pnpm --filter @repo/zod-clients build
      
      - name: Build backend
        run: pnpm --filter backend build
      
      - name: Generate API client
        run: pnpm --filter @nory/api-client generate
      
      # Start backend server for tests
      - name: Start backend server
        run: |
          pnpm --filter backend start &
          # Save PID to kill it later
          echo "SERVER_PID=$!" >> $GITHUB_ENV
          # Wait for server to start
          sleep 5
      
      # Create .env.local file to disable API mocking (use real backend)
      - name: Create .env.local for web app
        run: |
          echo "NEXT_PUBLIC_API_MOCKING=disabled" > apps/web/.env.local
          echo "NEXT_PUBLIC_API_URL=http://localhost:8080" >> apps/web/.env.local
      
      # Install Playwright browsers (for E2E tests)
      - name: Install Playwright browsers
        run: pnpm install:playwright
      
      # Run E2E tests
      - name: Run End-to-End Tests
        run: pnpm e2e
      
      # Upload test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            apps/web/playwright-report
            apps/web/test-results
          retention-days: 7
      
      # Stop backend server
      - name: Stop backend server
        if: always()
        run: |
          if [ -n "$SERVER_PID" ]; then
            kill $SERVER_PID || true
          fi